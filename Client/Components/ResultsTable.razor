@using ScoreTracker.Shared.Results
@using ScoreTracker.Shared.Users
@using System.Linq
@using System.Net.Security
@using ScoreTracker.Client.Services
@using ScoreTracker.Shared
@inject IUserService _userService
@implements IDisposable

<table class="table">
    <thead>
    <tr>
        @if (ShowGymnastName)
        {
            <th>Name</th>
        }
        @if (string.IsNullOrEmpty(ClubIdFilter))
        {
            <th>Club</th>
        }
        @if (ShowLevel)
        {
            <th>Level</th>
        }
        @if (ShowDivision)
        {
            <th>Division</th>
        }
        <th>FX</th>
        <th>PH</th>
        <th>SR</th>
        <th>VT</th>
        <th>PB</th>
        <th>HB</th>
        <th>AA</th>
    </tr>
    </thead>
    <tbody>
        <Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize Context="score" Items="@Scores">
            @if (string.IsNullOrEmpty(ClubIdFilter) || ClubIdFilter == score.ClubId)
            {
                <tr>
                    @if (ShowGymnastName)
                    {
                        <td><a href="/athletes/@score.AthleteId">@score.AthleteName</a></td>
                    }
                    @if (string.IsNullOrEmpty(ClubIdFilter))
                    {
                        <td><a href="/clubs/@score.ClubId">@score.Club</a></td>
                    }
                    @if (ShowLevel)
                    {
                        <td>@score.Level</td>
                    }
                    @if (ShowDivision)
                    {
                        <td>@score.AgeGroup</td>
                    }
                    <td>@score.Floor?.FinalScore (@(ShowCombinedRankings ? score.Floor?.CombinedRank : score.Floor?.Rank))</td>
                    <td>@score.Horse?.FinalScore (@(ShowCombinedRankings ? score.Horse?.CombinedRank : score.Horse?.Rank))</td>
                    <td>@score.Rings?.FinalScore (@(ShowCombinedRankings ? score.Rings?.CombinedRank : score.Rings?.Rank))</td>
                    <td>@score.Vault?.FinalScore (@(ShowCombinedRankings ? score.Vault?.CombinedRank : score.Vault?.Rank))</td>
                    <td>@score.PBars?.FinalScore (@(ShowCombinedRankings ? score.PBars?.CombinedRank : score.PBars?.Rank))</td>
                    <td>@score.HBar?.FinalScore (@(ShowCombinedRankings ? score.HBar?.CombinedRank : score.HBar?.Rank))</td>
                    <td>@score.AllAround.FinalScore (@(ShowCombinedRankings ? score.AllAround.CombinedRank : score.AllAround.Rank))</td>
                </tr>
            }
        </Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize>
    </tbody>
</table>

@code {
    [Parameter]
    public ICollection<MeetResult> Scores { get; set; } = null!;

    [Parameter]
    public string? ClubIdFilter { get; set; }

    [Parameter]
    public bool ShowLevel { get; set; }

    [Parameter]
    public bool ShowDivision { get; set; }

    [Parameter]
    public bool ShowGymnastName { get; set; }

    [Parameter]
    public bool ShowCombinedRankings { get; set; }

    protected override void OnInitialized()
    {
        _userService.OnUserChange += StateHasChanged;
    }

    public void Dispose()
    {
        _userService.OnUserChange -= StateHasChanged;
    }
}
