@page "/"
@using ScoreTracker.Shared.Meets
@using ScoreTracker.Shared.Subscriptions
@inject IMeetService MeetService
@inject ISubscriptionService SubscriptionService

<h1>Score Tracker</h1>

@if (Meets != null)
{
    <h2>My Meets</h2>
    @foreach (var meet in Meets)
    {
        <div><a href="/meetresults/@meet.Id">@meet.Name</a></div>
    }
}

@if (Subscriptions != null)
{
    <h2>Following</h2>
    @foreach (var subscription in Subscriptions)
    {
        <div>@subscription.Name</div>
    }
}

@code
{
    IList<Meet> Meets { get; set; } = new List<Meet>();
    IList<Subscription> Subscriptions { get; set; } = new List<Subscription>();

    protected override async Task OnInitializedAsync()
    {
        Subscriptions = await SubscriptionService.GetSubscriptionsAsync(new SubscriptionQuery()).ToListAsync();

        // TODO: Need to get only meets for the current user.  Query by Athletes and Clubs in Subscriptions.
        Meets = await MeetService.GetMeetsAsync(new MeetQuery()).ToListAsync();
    }
}
