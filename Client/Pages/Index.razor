@page "/"
@using ScoreTracker.Shared.Meets
@using ScoreTracker.Client.Services
@inject MeetService MeetService
@inject UserService UserService
@implements IDisposable

<h1>Score Tracker</h1>

@if (Meets != null)
{
    <h2>My Meets</h2>
    foreach (var meet in Meets)
    {
        <div><a href="/meets/@meet.Id">@meet.Name</a></div>
    }
}

@if (UserService.User?.Subscriptions != null)
{
    <h2>Following</h2>
    foreach (var subscription in UserService.User.Subscriptions)
    {
        <div>@subscription.Name</div>
    }
}

@code
{
    ICollection<Meet> Meets { get; set; } = new List<Meet>();

    protected override async Task OnInitializedAsync()
    {
        UserService.OnUserChange += StateHasChanged;
        Meets = await MeetService.GetFollowingMeetsAsync(UserService.User);
    }

    public void Dispose()
    {
        UserService.OnUserChange -= StateHasChanged;
    }
}
